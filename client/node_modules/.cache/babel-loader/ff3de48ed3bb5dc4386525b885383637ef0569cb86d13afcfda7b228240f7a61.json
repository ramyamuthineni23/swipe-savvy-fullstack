{"ast":null,"code":"var _jsxFileName = \"/Users/ramyamuthineni/swipe-savvy/client/src/components/HeroSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createElement as _createElement } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroSection({\n  onSearch\n}) {\n  _s();\n  const [address, setAddress] = useState('');\n  const [error, setError] = useState(null);\n  const handleSelect = async selectedAddress => {\n    try {\n      setError(null);\n      const results = await geocodeByAddress(selectedAddress);\n      if (!results || results.length === 0) {\n        throw new Error('No results found for the selected address.');\n      }\n      const place = results[0];\n      await getLatLng(place); // For validation, if needed\n\n      // Construct businessDetails with required fields\n      const businessDetails = {\n        business_id: place.place_id,\n        // Use place_id as business_id\n        name: place.name || place.formatted_address.split(',')[0] || 'Unknown Business',\n        address: place.formatted_address || 'No address available',\n        phone: null,\n        // Placeholder: Requires Places Details API\n        imageUrl: null // Placeholder: Requires Places Details API\n      };\n\n      // Optional: Fetch additional details (phone, imageUrl) via Places Details API\n      // This requires a server-side endpoint or client-side PlacesService\n      console.log('Sending businessDetails:', businessDetails);\n      onSearch(businessDetails);\n      setAddress('');\n    } catch (error) {\n      console.error('Error fetching business details:', error);\n      setError('Failed to fetch business details. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Welcome to Swipe Savvy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4\",\n      children: \"Find your business to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n      value: address,\n      onChange: setAddress,\n      onSelect: handleSelect,\n      children: ({\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps({\n            placeholder: 'Search for your business',\n            className: 'p-2 w-full border rounded'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm mt-2\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 27\n          }, this), suggestions.map(suggestion => /*#__PURE__*/_createElement(\"div\", {\n            ...getSuggestionItemProps(suggestion),\n            key: suggestion.placeId,\n            className: \"p-2 hover:bg-gray-100 cursor-pointer\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }\n          }, suggestion.description))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(HeroSection, \"YHBavL0lscW2MSug9rfrdpbuEp8=\");\n_c = HeroSection;\nexport default HeroSection;\nvar _c;\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"names":["React","useState","createElement","_createElement","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","HeroSection","onSearch","_s","address","setAddress","error","setError","handleSelect","selectedAddress","results","length","Error","place","businessDetails","business_id","place_id","name","formatted_address","split","phone","imageUrl","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","key","placeId","__self","__source","description","_c","$RefreshReg$"],"sources":["/Users/ramyamuthineni/swipe-savvy/client/src/components/HeroSection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nfunction HeroSection({ onSearch }) {\n  const [address, setAddress] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleSelect = async (selectedAddress) => {\n    try {\n      setError(null);\n      const results = await geocodeByAddress(selectedAddress);\n      if (!results || results.length === 0) {\n        throw new Error('No results found for the selected address.');\n      }\n      const place = results[0];\n      await getLatLng(place); // For validation, if needed\n\n      // Construct businessDetails with required fields\n      const businessDetails = {\n        business_id: place.place_id, // Use place_id as business_id\n        name: place.name || place.formatted_address.split(',')[0] || 'Unknown Business',\n        address: place.formatted_address || 'No address available',\n        phone: null, // Placeholder: Requires Places Details API\n        imageUrl: null, // Placeholder: Requires Places Details API\n      };\n\n      // Optional: Fetch additional details (phone, imageUrl) via Places Details API\n      // This requires a server-side endpoint or client-side PlacesService\n      console.log('Sending businessDetails:', businessDetails);\n      onSearch(businessDetails);\n      setAddress('');\n    } catch (error) {\n      console.error('Error fetching business details:', error);\n      setError('Failed to fetch business details. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold mb-4\">Welcome to Swipe Savvy</h1>\n      <p className=\"mb-4\">Find your business to get started.</p>\n      <PlacesAutocomplete value={address} onChange={setAddress} onSelect={handleSelect}>\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: 'Search for your business',\n                className: 'p-2 w-full border rounded',\n              })}\n            />\n            {error && <p className=\"text-red-500 text-sm mt-2\">{error}</p>}\n            <div className=\"mt-2\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map((suggestion) => (\n                <div\n                  {...getSuggestionItemProps(suggestion)}\n                  key={suggestion.placeId}\n                  className=\"p-2 hover:bg-gray-100 cursor-pointer\"\n                >\n                  {suggestion.description}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    </div>\n  );\n}\n\nexport default HeroSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}